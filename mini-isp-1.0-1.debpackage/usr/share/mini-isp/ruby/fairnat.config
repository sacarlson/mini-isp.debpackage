# ----------------------------------------------------------------------------
# File:        /etc/ppp/fairnat.config
# Description: Example configuration file for the fairnat.sh Script
#              You should be able to do pretty much everything here.
#              Change FAIRNAT_CONFIG in fairnat.sh if you want another default
#              location for this configuration file. This variable is at the
#              beginning of the script.
# Version:     0.80
# ----------------------------------------------------------------------------

# --- Features ---

# Specify what you want Fair NAT to do here.
# Leave things you don't want out. See below for a list.
# If you don't know what to do here, leave as is.
# Order does not matter.
#FEATURES="PROC MODULES RESET NAT FORWARD QOS_DOWN QOS_UP TOS"
FEATURES="QOS_DOWN QOS_UP TOS"

# PROC:
#     Allow Fair NAT to change some system variables in /proc,
#     like setting /proc/sys/net/ipv4/ip_forward to 1.
#
# MODULES:
#     Try to load kernel modules for QoS first.
#
# RESET:
#     Fair NAT will replace all existing iptables rules with
#     a very basic configuration. Not healthy for firewalls.
#     See README for details on firewall compatibility.
#     (Even without this, Fair NAT will reset it's own rules.)
#
# NAT:
#     Fair NAT will configure NAT.
#
# FORWARD:
#     Fair NAT will configure port forwarding.
#
# QOS_DOWN:
#     Configure LAN device for download shaping.
#     Existing shaping rules for the LAN device will be removed.
#
# QOS_UP:
#     Configure Internet device for upload shaping.
#     Existing shaping rules for the Internet device will be removed.
#
# TOS:
#     Allow Fair NAT to change TOS (type-of-service) flag of packets.
#     Right now, Fair NAT heavily relies on this TOS field for shaping,
#     so using this feature is highly recommended.

# --- LAN ---

# Specify the network device which is connected with your clients.
# The script assumes that this device has one static IP.
DEV_LAN=eth0

# Please tell me how fast your local area network is in kbit/s.
# It must be higher than your internet connection speed.
#
# If your internet connection is the same speed as your LAN, use
# a higher value here anyway - collisions between download and
# local traffic can't be avoided then.
#
# Default is 2MBit. Please keep in mind that even on
# a 10Mbit/100MBit LAN you rarely can use the full rate (because
# of overhead, collisions, etc.).
RATE_LAN=40mbit
#RATE_LAN=100kbit


# --- Internet ---

# Specify the network device that is connected to the internet.
# If you are a dialup user, you have to re-run the script every
# time you redial.
#DEV_NET=ppp0
#changed by scotty
DEV_NET=eth0

# Specify the upload speed of your internet connection in kbit/s.
# Since ISPs tend to overestimate the speeds they offer, it would
# probably be best if you measure this on a free line.
#   these are the number to play with and with only 1 nic you must double it since in has to pass two time 1 in 1 out
#RATE_UP=400kbit          # 128 kbit (common value for DSL in germany)
# try play with this 8/31/11 9:38pm this was what I needed to get download speed to 250kB/sec with 
#RATE_UP=4000kbit
#RATE_UP=6000kbit
#RATE_UP=8000kbit
#RATE_UP=10mbit
RATE_UP=15mbit

# Specify the download speed of your internet connection in kbit/s.
# Same as RATE_UP, you probably should measure this.
#   this is the other one to play with and 28000kbit seems closer to reality for 1 nic
# 28000kbit I got 1298kbps return from speedtest.adslthailand.com
#RATE_DOWN=48000kbit        # 768 kbit (common value for DSL in germany)
#RATE_DOWN=1300kbit
#RATE_DOWN=28000kbit
# no change in performance down to 700kbit still got 1316kbps down and about 400kbps up return so now not sure what I changed 
#RATE_DOWN=700kbit
# try 2mbit on 9/1/11 6:29pm  with both this and RATE_UP set to 2mbit I get 250kB/sec on wireshark
#RATE_DOWN=4000kbit
#RATE_DOWN=6000kbit
#RATE_DOWN=8000kbit  
#RATE_DOWN=10mbit
RATE_DOWN=15mbit

# In order to prevent traffic queuing at the ISP side or in your modem,
# we shape to a slightly lower rate. This way the bottleneck is the router,
# not the ISP or modem, which allows us more direct control of shaping.
# Per default, we sub 5% of bandwidth for this. If you do not have the
# bottleneck problem, set it to 0.
RATE_SUB_PERCENT=5

# How much % of the bandwidth should be allowed for the router?
# Use a minimum of 1 here, since the router usually always needs
# some bandwidth, for example for DNS queries to the outer world,
# or SSH sessions from the outer world.
#  was default at 5%
RATE_LOCAL_PERCENT=5



# If you have clients which need certain port (ranges) to be forwarded,
# specify them here. The format is "client port client port ...".
# The example below will forward ports 4000-6999 to 192.168.100.2 and
# ports 2000-3999 to 192.168.100.183.
#PORTS="2 4000:6999 183 2000:3999"
PORTS="" # this disables port forwarding.

# This setting affects the class structure set for each user.
# "default": one HTB class per user and puts PRIO and SFQ on top of it.
# "wonder":  uses ~3 HTB classes per user and uses HTB prio parameter.
#            Very similar to the structure used in Bert Hubert's Wondershaper.
CLASS_MODE="default"
#CLASS_MODE="wonder"

# Are users allowed to 'borrow' other user's bandwidth if they don't use them?
# Usually this is a good thing, even if you never have inactive clients.
# Set to 0 if you don't want to allow users to borrow other users bandwidth.
#  should try play more with this.  it does seem to have an effect
# I didn't notice any changes in the samba bandwidth tests 9/1/11 6:35pm
#BORROW=0
BORROW=1

# Usually, each user may use up to $RATE_UP / $RATE_DOWN (see above), e.g. all
# available bandwidth, as long as the line is free. If you want a lower limit,
# you can set it here.
#
# For example, you have a 500kbit line but don't want a single client to use
# more than 300kbit for himself. Then you set RATE_DOWN above to 500 and
# this variable here to 300.
#    Scotty note this might be the most effective setting I saw we seemed to get 30kByte with 300kbit setting
# 9/4/11 seems to be efective when I set borrow=0, will retry with borrow=1 with borrow=1 I don't notice any change
# direct changes when effective is seen per user as 100kB/sec with 1000kbit setting
# this was also seen when run from ./fairnat.sh full proc not sure about when it's run with masq.sh
#CEIL_USER_UP=3000kbit
#CEIL_USER_DOWN=3000kbit
CEIL_USER_UP=1500kbit
CEIL_USER_DOWN=1500kbit

# --- Support for IPP2P (Experimental) ---

# If you want to use IPP2P (marking & tracking P2P connections), set to 1.
# To use IPP2P, you need a patched kernel and iptables. Unless you activate
# dropping below, you also need the CONNMARK patch.
# Learn more about IPP2P here:
#     http://rnvs.informatik.uni-leipzig.de/ipp2p/index_en.html (english)
#  or http://rnvs.informatik.uni-leipzig.de/ipp2p/index.html    (german)
IPP2P_ENABLE=0

# Tell us which options to use for IPP2P:
# Default: Cover all P2P protocols.
# See IPP2P documentation for details.
IPP2P_OPTIONS="--ipp2p --apple --bit"

# Let IPP2P check UDP packets also? Set to 1 if you want that feature.
# An up-to-date IPP2P version is required for this.
IPP2P_UDP=0

# If P2P traffic should be forbidden in general, set to 1.
# Otherwise P2P will be allowed with lowest priority.
# This only has an effect if IPP2P_ENABLE=1
# Please note that only new connections will be affected.
IPP2P_DROP_ALL=0

# Together with IPP2P_DROP_ALL=1, this setting will allow dropping
# of already existing & marked connections. Use this only if you
# sometimes switch from allowing P2P to dropping P2P.
IPP2P_DROP_MARKED=0

# --- Hacks ---

# This section is for all the bloody stuff. Well, it's not as bad as it sounds,
# but you should read a bit of external documentation before using these.
# No, I'm not explaining them here. You should know what you're doing.

# * MSS Clamping
#   Work around bad MTU settings.
#   See also http://www.lartc.org/lartc.html#LARTC.COOKBOOK.MTU-MSS)
MSS_CLAMPING=0
# MSS_CLAMPING="--clamp-mss-to-pmtu"
# MSS_CLAMPING="--set-mss 128"

# * Set Time To Live (TTL) of outgoing packets
#   Specify the maximum number of hops to the clients here. A too low value will
#   effectively break your internet connection.
#   See also http://iptables-tutorial.frozentux.net/iptables-tutorial.html#TTLTARGET
#TTL_SET=0
TTL_SET=64

# * Specify overhead for HTB
#   From the LARTC Howto on MPU:
#   "A zero-sized packet does not use zero bandwidth. For ethernet, no packet
#    uses less than 64 bytes. The Minimum Packet Unit determines the minimal
#    token usage for a packet."
#HTB_MPU=0
# HTB_MPU=64  # Ethernet
HTB_MPU=106 # According to Andy Furniss, this value is suited for DSL users

# Specify overhead per packet for HTB.
HTB_OVERHEAD=0
# I don't use this myself yet. :-P Tell me some good values.

# The following is in the hacks section because it could allow running
# multiple instances of Fair NAT on a single server (whatever you'd want
# that for). The prefix is used for iptables chains used by Fair NAT.
FAIRNAT_PREFIX="FAIRNAT"


# --- Binaries ---

# For this script, you need a tc-tool that supports HTB.
# Per default, the script looks first for tc-htb, then for tc.
# Set name directly if your HTB-enabled tc is called something else.

# BIN_TC=`which tc`         use this if your binary is called tc
# BIN_TC="/root/bin/my_tc"  or set the full path directly like this.

# All binarys used by Fair NAT can be configured like BIN_TC above:
#
# BIN_IPT:        iptables (with support for HTB and probably IPP2P)
# BIN_TC:         tc (with support for HTB, see above)
# BIN_IFC:        ifconfig
# BIN_GREP:       grep
# BIN_SED:        sed
# BIN_ECHO:       echo
# BIN_MODPROBE    modprobe
#
# If you don't specify these, the first binary found in your PATH
# will be used, which should work for most people.

# ----------------------------------------------------------------------------

# --- Clients: ---

# Specify the clients for which we do Masquerading and Shaping.
# The script assumes that all clients have static IPs in the
# same subnet as your LAN device.
#
# Example: If the IP of DEV_LAN is 192.168.100.42, the line above
#          means that 192.168.100.2, 192.168.100.5, etc., are
#          the IPs of your clients.
#          6:23:25 is a group of 3 IPs that all belong to the same user.
#          Use this notation if a single person has more than one machine
#          /IP connected to the router.
#
# New: You can also specify a custom ceil rate per user.
#      Syntax:  <user>@<down_ceil>[|<up_ceil>]
#      However, ceil has to be bigger than the guaranteed rate,
#      otherwise you will get weird results.
#USERS="2 5 6:23:25 183@1mbit|100kbit"
#USERS="122 125 128@10kbit| 130 250@400kbit|"
#USERS=" 250@300kbit|100kbit"
#USERS=" 208@1kbit|2kbit"
# USERS= lastipnumber@downloadspeed|uploadspeed
# edited by scotty to slow down peter at 192.168.2.104 to 490kbit download speed 20kbit upload speed 
#USERS=" 104@490kbit|20kbit 101@500kbit|20kbit"
# I saw no effect from changeing 180@1000kbit to 180@100kbit but maybe due to barrow = 1
# now I see a change with 180@10kbit| I get 109kbps from speedtest.adslthailand.com  when barrow = 0 and RATE_DOWN set to 700kbit
#  I see 50k on wireshark since we see 2time (in and out) plus?
# so 104@50kbit| should give him 1/2 of the bandwidth instead of all of it.
# 104 = peter 101 = raj 193 = laptop_wifi 191 = topbox 180 = laptop_wire
# 134 = luis 33 = tom 199 = eeepc 250 = bigboy  others are eeepc?
#USERS=" 134@1000kbit| 33@10kbit| 199@1000kbit| 193@1000kbit| 192@1000kbit| 250@1000kbit|"
# new edit to slow down leif that uses 90% of network and glen also now uses more than 50%
# 121 = leif, 139 = leif2, harry = 118, dessy = 115, dessy2 = 139, richo = 129, gert = 140, glenn = 124, graybox = 158   steve= 116
# this setting seems to have pushed 124 down to using about 50kB/sec when 124@100kbit| set with 7 users
# I don't seem to see these value do anything to the outcome of the bandwidth 9/1/11 6:33pm
# USERS=" 143@2mbit|2mbit 118@2mbit|2mbit 124@2mbit|2mbit 115@2mbit|2mbit 129@2mbit|2mbit 140@2mbit|2mbit 198@2mbit|2mbit 158@2mbit|2mbit 138@2mbit|2mbit 131@2mbit|2mbit 132@2mbit|2mbit 133@2mbit|2mbit 146@2mbit|2mbit"

# it takes about 6 secounds before the action is seen on wireshark, the rate drops to zero for about 3 secounds
# I also see 124@200kbit is now maxed at 100kB/sec in wireshark filter graph view only for the first 6 secounds then 50kb
# 100 secounds to restart with ./masq.sh

USERS="175@2000kbit|2000kbit 176@2000kbit|2000kbit 250@10000kbit|10000kbit 187@2000kbit|2000kbit 192@400kbit|400kbit 253@2000kbit|2000kbit 200@2000kbit|2000kbit 198@2000kbit|2000kbit 205@4000kbit|4000kbit 196@2000kbit|2000kbit 212@2000kbit|2000kbit 213@2000kbit|2000kbit 214@2000kbit|2000kbit 215@2000kbit|2000kbit 216@2000kbit|2000kbit 220@2000kbit|2000kbit "
