#! /bin/sh
# mini-isp (c) Scott Carlson sacarlson@ipipi.com
set -e

# -*- sh -*-
# This file can be included with #SCRIPTSCOMMON#

# Fire up debconf and ensure it is at least version 2.0
# Usage: load_debconf2 "$@"  - needed as debconf will exec the current script,
# passing the current shell parameters. So we must lift these into the shell
# function. Missing this caused bug #555151.
load_debconf2() {
   . /usr/share/debconf/confmodule
   if ! db_version 2.0; then
      echo >&2 "$0: need DebConf 2.0 or later"
      exit 1
   fi
}

get_data() {
      echo "start get_data \n"
      db_get mini-isp/username
      username=$RET
      db_get mini-isp/password
      password=$RET
      db_get mini-isp/url
      url=$RET
      db_get mini-isp/internal_interface
      internal_interface=$RET
      db_get mini-isp/internal_ip_address
      internal_ip_address=$RET
      db_get mini-isp/external_interface
      external_interface=$RET
      db_get mini-isp/external_ip_address
      external_ip_address=$RET
      db_get mini-isp/router_ip_address
      router_ip_address=$RET
      db_get mini-isp/autostart
      autostart=$RET
      echo "auto = $autostart \n"
      db_get mini-isp/singlenet
      singlenet=$RET
      echo "singlenet = $singlenet \n"
      if [ $singlenet = "true" ]; then
        external_interface=$internal_interface
        external_ip_address=$internal_ip_address
      fi
      echo "external_inteface = $external_interface \n"
      mysql_server="localhost"
      mysql_user=$username
      mysql_pass=$password
      mysql_database="mini_isp"
      ruby_workingdir="/usr/share/mini-isp/ruby/" 
      if [ ! "$password" ]; then 
        echo "you forgot to enter a password, must have one to work try install again with one \n"
        exit 1
      fi   
      echo "get_data complete \n"
}


# Usage: y=`quote_backslashes "$x"`
# Quotes each backslash in $x with another backslash, outputs result.
quote_backslashes() {
  echo -n "$1" | sed 's,\\,\\\\,g'
}
#
# Copyright (C) 2014 Scott Carlson <sacarlson@ipipi.com>

case "$1" in
configure)
      load_debconf2 "$@"
      echo "start configure case \n"
      get_data
      if [ $autostart = "true" ]; then
        echo " autostart set to true will enable cron.d event \n"
        mv /usr/share/mini-isp/mini-isp-cron /etc/cron.d/mini-isp-cron
      else
        rm -f /etc/cron.d/mini-isp-cron
      fi
      echo "autostart returned as $autostart \n"

  share="/usr/share/mini-isp"  
 
  config=`mktemp /etc/mini-isp.conf.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
# Configuration file for mini-isp generated by debconf
# mini-isp (c) 2014 Scott Carlson  sacarlson@ipipi.com
# /etc/mini-isp.conf

username=$username
url=$url
internal_interface=$internal_interface
internal_ip_address=$internal_ip_address
external_interface=$external_interface
external_ip_address=$external_ip_address
router_ip_address=$router_ip_address
singlenet=$singlenet
mysql_server=$mysql_server
mysql_user=$mysql_user
mysql_pass=$mysql_pass
mysql_database=$mysql_database
ruby_workingdir=$ruby_workingdir

EOF
      rm -f /etc/mini-isp.conf
      mv $config /etc/mini-isp.conf
      chmod 766 /etc/mini-isp.conf

#mini-isp ruby section configs 
#/usr/share/mini-isp/ruby/mini-isp-ruby-conf.rb
config=`mktemp "$ruby_workingdir"mini-isp-ruby.conf.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
#!/usr/bin/ruby
# Configuration file for mini-isp generated by debconf
# mini-isp (c) 2014 Scott Carlson  sacarlson@ipipi.com
# mini-isp-ruby.conf


\$host = 'localhost'
\$user = '$mysql_user'
\$password = '$mysql_pass'
\$database = '$mysql_database'
\$workingdir = '$ruby_workingdir'

EOF

rm -f "$ruby_workingdir"config.rb
mv $config "$ruby_workingdir"config.rb
chmod 755 "$ruby_workingdir"config.rb

sysname=$(hostname)
#/etc/hosts ip configs
config=`mktemp "$ruby_workingdir"hosts.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
# Configuration file hosts for mini-isp generated by debconf
# mini-isp (c) 2014 Scott Carlson  sacarlson@ipipi.com
# /etc/hosts
127.0.0.1	localhost
127.0.1.1	$sysname
$internal_ip_address freenet.surething.biz freenet_dns freenet_router
$router_ip_address router


# The following lines are desirable for IPv6 capable hosts
::1     ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters

EOF

if [ -e /etc/hosts ]; then
  rm -f etc/hosts.org
  mv /etc/hosts /etc/hosts.org
fi
mv $config /etc/hosts
chmod 644 /etc/hosts

#catalog2 oscomerce php user configs
#/usr/share/mini-isp/www/freenet.surething.biz/catalog2/includes/configure.php
config=`mktemp "$ruby_workingdir"configure.php.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
<?php
  define('HTTP_SERVER', 'http://$url');
  define('HTTPS_SERVER', 'http://$url');
  define('ENABLE_SSL', false);
  define('HTTP_COOKIE_DOMAIN', '');
  define('HTTPS_COOKIE_DOMAIN', '');
  define('HTTP_COOKIE_PATH', '/catalog2/');
  define('HTTPS_COOKIE_PATH', '/catalog2/');
  define('DIR_WS_HTTP_CATALOG', '/catalog2/');
  define('DIR_WS_HTTPS_CATALOG', '/catalog2/');
  define('DIR_WS_IMAGES', 'images/');
  define('DIR_WS_ICONS', DIR_WS_IMAGES . 'icons/');
  define('DIR_WS_INCLUDES', 'includes/');
  define('DIR_WS_FUNCTIONS', DIR_WS_INCLUDES . 'functions/');
  define('DIR_WS_CLASSES', DIR_WS_INCLUDES . 'classes/');
  define('DIR_WS_MODULES', DIR_WS_INCLUDES . 'modules/');
  define('DIR_WS_LANGUAGES', DIR_WS_INCLUDES . 'languages/');

  define('DIR_WS_DOWNLOAD_PUBLIC', 'pub/');
  define('DIR_FS_CATALOG', '/usr/share/mini-isp/www/freenet.surething.biz/catalog2/');
  define('DIR_FS_DOWNLOAD', DIR_FS_CATALOG . 'download/');
  define('DIR_FS_DOWNLOAD_PUBLIC', DIR_FS_CATALOG . 'pub/');

  define('DB_SERVER', '$mysql_server');
  define('DB_SERVER_USERNAME', '$mysql_user');
  define('DB_SERVER_PASSWORD', '$mysql_pass');
  define('DB_DATABASE', '$mysql_database');
  define('USE_PCONNECT', 'false');
  define('STORE_SESSIONS', 'mysql');
  define('CFG_TIME_ZONE', 'Asia/Bangkok');
?>

EOF


rm -f "$share"/www/freenet.surething.biz/catalog2/includes/configure.php
mv $config "$share"/www/freenet.surething.biz/catalog2/includes/configure.php
chmod 644 "$share"/www/freenet.surething.biz/catalog2/includes/configure.php

#catalog2 oscomerce php admin configs
#/usr/share/mini-isp/www/freenet.surething.biz/catalog2/admin/includes/configure.php
config=`mktemp "$ruby_workingdir"configure_admin.php.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
<?php
  define('HTTP_SERVER', 'http://$url');
  define('HTTP_CATALOG_SERVER', 'http://$url');
  define('HTTPS_CATALOG_SERVER', 'http://freenet.surething.biz');
  define('ENABLE_SSL_CATALOG', 'false');
  define('DIR_FS_DOCUMENT_ROOT', '/usr/share/mini-isp/www/freenet.surething.biz/catalog2/');
  define('DIR_WS_ADMIN', '/catalog2/admin/');
  define('DIR_FS_ADMIN', '/usr/share/mini-isp/www/freenet.surething.biz/catalog2/admin/');
  define('DIR_WS_CATALOG', '/catalog2/');
  define('DIR_FS_CATALOG', '/usr/share/mini-isp/www/freenet.surething.biz/catalog2/');
  define('DIR_WS_IMAGES', 'images/');
  define('DIR_WS_ICONS', DIR_WS_IMAGES . 'icons/');
  define('DIR_WS_CATALOG_IMAGES', DIR_WS_CATALOG . 'images/');
  define('DIR_WS_INCLUDES', 'includes/');
  define('DIR_WS_BOXES', DIR_WS_INCLUDES . 'boxes/');
  define('DIR_WS_FUNCTIONS', DIR_WS_INCLUDES . 'functions/');
  define('DIR_WS_CLASSES', DIR_WS_INCLUDES . 'classes/');
  define('DIR_WS_MODULES', DIR_WS_INCLUDES . 'modules/');
  define('DIR_WS_LANGUAGES', DIR_WS_INCLUDES . 'languages/');
  define('DIR_WS_CATALOG_LANGUAGES', DIR_WS_CATALOG . 'includes/languages/');
  define('DIR_FS_CATALOG_LANGUAGES', DIR_FS_CATALOG . 'includes/languages/');
  define('DIR_FS_CATALOG_IMAGES', DIR_FS_CATALOG . 'images/');
  define('DIR_FS_CATALOG_MODULES', DIR_FS_CATALOG . 'includes/modules/');
  define('DIR_FS_BACKUP', DIR_FS_ADMIN . 'backups/');
  define('DIR_FS_DOWNLOAD', DIR_FS_CATALOG . 'download/');
  define('DIR_FS_DOWNLOAD_PUBLIC', DIR_FS_CATALOG . 'pub/');

  define('DB_SERVER', '$mysql_server');
  define('DB_SERVER_USERNAME', '$mysql_user');
  define('DB_SERVER_PASSWORD', '$mysql_pass');
  define('DB_DATABASE', '$mysql_database');
  define('USE_PCONNECT', 'false');
  define('STORE_SESSIONS', 'mysql');
  define('CFG_TIME_ZONE', 'Asia/Bangkok');
?>

EOF


rm -f "$share"/www/freenet.surething.biz/catalog2/admin/includes/configure.php
mv $config "$share"/www/freenet.surething.biz/catalog2/admin/includes/configure.php
chmod 644 "$share"/www/freenet.surething.biz/catalog2/admin/includes/configure.php

#freenet custom php configs
config=`mktemp "$ruby_workingdir"config.php.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
<?php
  //catalog2 configs
  \$username = '$mysql_user';
  \$password = '$mysql_pass';
  \$database = '$mysql_database';
  \$hostname = 'localhost';

    date_default_timezone_set('Asia/Bangkok');
    define('HTTP_SERVER', 'http://$url');
    define('HTTPS_SERVER', 'http://$url');
    define('HTTP_CATALOG_SERVER', 'http://$url');
    define('HTTPS_CATALOG_SERVER', 'http://$url');
 
    define('DIR_FS_CATALOG', '/usr/share/mini-isp/www/freenet.surething.biz/catalog2/');
    define('DIR_FS_DOCUMENT_ROOT', '/usr/share/mini-isp/www/freenet.surething.biz/catalog2/');
    define('DIR_FS_ADMIN', '/usr/share/mini-isp/www/freenet.surething.biz/catalog2/admin/');

    define('DB_SERVER', \$hostname );
    define('DB_SERVER_USERNAME', '$mysql_user' );
    define('DB_SERVER_PASSWORD', '$mysql_pass' );
    define('DB_DATABASE', '$mysql_database' );
  
  //freenet custom configs
  \$mysql_hostname		= \$hostname;			// mysql hostname
  \$mysql_database		= '$mysql_database';			// mysql database
  \$mysql_username		= '$mysql_user';			// mysql username
  \$mysql_password		= '$mysql_pass';			// mysql password 

  //phpBB2 configs  
  \$dbms = 'mysql4';
  \$dbhost = \$hostname;
  \$dbname = 'phpbb2';
  \$dbuser = '$mysql_user';
  \$dbpasswd = '$mysql_pass';
  \$table_prefix = 'phpbb_';
  define('PHPBB_INSTALLED', true);

  //daloradius settings
  \$configValues['enable_radius_support'] = 0;
  \$configValues['FREERADIUS_VERSION'] = '2';
  \$configValues['CONFIG_DB_HOST'] = \$hostname;
  \$configValues['CONFIG_DB_PORT'] = '3306';
  \$configValues['CONFIG_DB_USER'] = '$mysql_user';
  \$configValues['CONFIG_DB_PASS'] = '$mysql_pass';
  \$configValues['CONFIG_DB_NAME'] = 'radius';
  \$configValues['CONFIG_DB_TBL_RADCHECK'] = 'radcheck';

?>

EOF


rm -f "$share"/www/freenet.surething.biz/config.php 
mv $config "$share"/www/freenet.surething.biz/config.php
chmod 644 "$share"/www/freenet.surething.biz/config.php



#config apache2 stuf
#rm -f /etc/apache2/conf-available/mini-isp-apache.conf
#mv  "$share"/apache2/conf-available/mini-isp-apache.conf /etc/apache2/conf-available/mini-isp-apache.conf
config=`mktemp "$ruby_workingdir"mini-isp-apache.conf.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
# mini-isp Apache configuration
# created at mini-isp install time
Alias /mini-isp /usr/share/mini-isp/www/freenet.surething.biz
ErrorDocument 404 http://$url/login3.php

<Directory /usr/share/mini-isp/www/freenet.surething.biz>
	Options FollowSymLinks
	DirectoryIndex index.php
</Directory>


<VirtualHost *:80>
        CustomLog /var/log/apache2/access.log combined
        ServerAdmin webmaster@localhost
        ServerName localhost
        DirectoryIndex index.php
        DocumentRoot /usr/share/mini-isp/www/freenet.surething.biz
</VirtualHost>

<VirtualHost *:80>
        CustomLog /var/log/apache2/access.log combined
        ServerAdmin webmaster@localhost
        ServerName $internal_ip_address
        DirectoryIndex index.php
        DocumentRoot /usr/share/mini-isp/www/freenet.surething.biz
</VirtualHost>

<VirtualHost *:80>
        CustomLog /var/log/apache2/access.log combined
        ServerAdmin webmaster@localhost
        ServerName $url
        DirectoryIndex index.php
        DocumentRoot /usr/share/mini-isp/www/freenet.surething.biz
</VirtualHost>

EOF
mv $config /etc/apache2/conf-available/mini-isp-apache.conf
chmod 644 /etc/apache2/conf-available/mini-isp-apache.conf
ln -sf /etc/apache2/conf-available/mini-isp-apache.conf /etc/apache2/conf-enabled/mini-isp-apache.conf

#setup index.php for redirect to your url named login
config=`mktemp "$ruby_workingdir"index.php.netup.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
<?php
 include('config.php');
 header("Cache-Control: no-cache, must-revalidate");
 header("Expires: Sat, 26 Jul 1997 05:00:00 GMT");
 \$header_string= "refresh: 0; url= http://$url/login3.php";
 header( \$header_string );
?>

EOF

mv -f $config $share/www/freenet.surething.biz/index.php.netup
chmod 644 $share/www/freenet.surething.biz/index.php.netup
ln -sf $share/www/freenet.surething.biz/index.php.netup $share/www/freenet.surething.biz/index.php


#remove original bind9 template configs
rm -f -r /etc/bind/zones
mkdir /etc/bind/zones
chmod 755 /etc/bind/zones

#create bind9 options configs
config=`mktemp "$ruby_workingdir"named.conf.options.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
 options {
	directory "/var/cache/bind";

	auth-nxdomain no;    # conform to RFC1035
        listen-on {$internal_ip_address; };
        allow-recursion {192.168.2.0/24;};
};

EOF

mv -f $config /etc/bind/named.conf.options
chmod 644 /etc/bind/named.conf.options

#create bind9 customized zones configs
config=`mktemp "$ruby_workingdir"freenet.surething.biz.db.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
\$ORIGIN .
\$TTL 38400	; 10 hours 40 minutes
$url	IN SOA	ns1.$url. root.$url. (
				2008030529 ; serial
				10800      ; refresh (3 hours)
				3600       ; retry (1 hour)
				604800     ; expire (1 week)
				38400      ; minimum (10 hours 40 minutes)
				)
			NS	ns1.$url.
\$TTL 3500	; 58 minutes 20 seconds
			A	$internal_ip_address
\$ORIGIN $url.
*			A	$internal_ip_address

EOF


rm -f /etc/bind/zones/*.db
mv $config /etc/bind/zones/$url.db
chmod 644 /etc/bind/zones/$url.db

#bind9 network failure mode files
#bad.com.db
config=`mktemp "$ruby_workingdir"bad.com.db.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
$ORIGIN .
$TTL 38400	; 10 hours 40 minutes
com	IN SOA	ns1.$url. root.$url. (
				2008030529 ; serial
				10800      ; refresh (3 hours)
				3600       ; retry (1 hour)
				604800     ; expire (1 week)
				38400      ; minimum (10 hours 40 minutes)
				)
			NS	ns1.$url.
$TTL 3500	; 58 minutes 20 seconds
			A	$internal_ip_address
$ORIGIN com.
*			A	$internal_ip_address

EOF

mv $config /etc/bind/zones/bad.com.db
chmod 644 /etc/bind/zones/bad.com.db

#bad.net.db
config=`mktemp "$ruby_workingdir"bad.net.db.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
$ORIGIN .
$TTL 38400	; 10 hours 40 minutes
net	IN SOA	ns1.$url. root.$url. (
				2008030529 ; serial
				10800      ; refresh (3 hours)
				3600       ; retry (1 hour)
				604800     ; expire (1 week)
				38400      ; minimum (10 hours 40 minutes)
				)
			NS	ns1.$url.
$TTL 3500	; 58 minutes 20 seconds
			A	$internal_ip_address
$ORIGIN com.
*			A	$internal_ip_address

EOF

mv $config /etc/bind/zones/bad.net.db
chmod 644 /etc/bind/zones/bad.net.db

#bad.org.db
config=`mktemp "$ruby_workingdir"bad.org.db.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
$ORIGIN .
$TTL 38400	; 10 hours 40 minutes
org	IN SOA	ns1.$url. root.$url. (
				2008030529 ; serial
				10800      ; refresh (3 hours)
				3600       ; retry (1 hour)
				604800     ; expire (1 week)
				38400      ; minimum (10 hours 40 minutes)
				)
			NS	ns1.$url.
$TTL 3500	; 58 minutes 20 seconds
			A	$internal_ip_address
$ORIGIN com.
*			A	$internal_ip_address

EOF

mv $config /etc/bind/zones/bad.org.db
chmod 644 /etc/bind/zones/bad.org.db

#bad.th.db
config=`mktemp "$ruby_workingdir"bad.org.db.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
$ORIGIN .
$TTL 38400	; 10 hours 40 minutes
th	IN SOA	ns1.$url. root.$url. (
				2008030529 ; serial
				10800      ; refresh (3 hours)
				3600       ; retry (1 hour)
				604800     ; expire (1 week)
				38400      ; minimum (10 hours 40 minutes)
				)
			NS	ns1.$url.
$TTL 3500	; 58 minutes 20 seconds
			A	$internal_ip_address
$ORIGIN com.
*			A	$internal_ip_address

EOF

mv $config /etc/bind/zones/bad.th.db
chmod 644 /etc/bind/zones/bad.th.db


#conf bind9 named.conf.local.bad
config=`mktemp "$ruby_workingdir"named.conf.local.bad.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
    zone "com" {
            type master;
	    file "/etc/bind/zones/bad.com.db";	   
    };
    
    zone "net" {
            type master;
	    file "/etc/bind/zones/bad.net.db";	   
    };

    zone "org" {
            type master;
	    file "/etc/bind/zones/bad.org.db";
    };

    zone "th" {
            type master;
	    file "/etc/bind/zones/bad.th.db";
    };

    zone "$url" {
            type master;
	    file "/etc/bind/zones/$url.db";	   
    };

EOF
rm -f /etc/bind/named.conf.local.bad
mv $config /etc/bind/named.conf.local.bad
chmod 644 /etc/bind/named.conf.local.bad

#config bind9 named.conf.local.good
config=`mktemp "$ruby_workingdir"named.conf.local.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
 zone "$url" {
            type master;
	    file "/etc/bind/zones/$url.db";	   
    };

EOF

rm -f /etc/bind/named.conf.local.good
mv $config /etc/bind/named.conf.local.good
chmod 644 /etc/bind/named.conf.local.good
echo "bind config generation completed ok \n "

#create an /etc/resolv.conf since we will run network static we will need to have something to start resolving ip
#/resolv.conf.d/base
config=`mktemp "$ruby_workingdir"base.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
nameserver $internal_ip_address
nameserver 8.8.8.8

EOF

mv -f $config /etc/resolvconf/resolv.conf.d/base
chmod 644 /etc/resolvconf/resolv.conf.d/base

#check if you already have a mini isp mysql database setup. if not we will create a blank one
#if a database is detected then it will just use that present one you now have already installed
# note that the mysql root password must be the same as mini-isp password at least at install time
# later you can change root password if you want will not effect mini-isp operations
  # this script should check if data base exist and if not install blank template database
  /usr/share/mini-isp/check_database_exists.sh 2>&1
  # reset password for oscommerce admin password to mini-isp settings
  passhash=$($share/gen_osc_pass_hash.sh $mysql_pass)
  passhashf=$(echo $passhash | tr -d '\r')
  echo "osc password hash = $passhashf "
    mysql -u root --password=$mysql_pass -D $mysql_database <<EOF
UPDATE administrators SET user_name='$mysql_user' WHERE id='1';
UPDATE administrators SET user_password='$passhashf' WHERE id='1';
EOF

      if [ $autostart = "true" ]; then
        echo " autostart set to true so will start mini-isp active now \n"
         update-rc.d -f mini-isp defaults 99 
         invoke-rc.d mini-isp start 2>&1
      else
        update-rc.d -f mini-isp remove
      fi

      db_purge
      echo "after db_purge \n"
      sleep 1
      db_stop
      echo "after db_stop \n"

    ;;

  abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac
echo "completed postinst \n"
exit 0
